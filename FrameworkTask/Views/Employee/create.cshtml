@model FrameworkTask.Models.Employee

@{
    ViewBag.Title = "Create Employee";
}

<h2>Create Employee</h2>

@using (Html.BeginForm("Create", "Employee", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- First Name -->
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Last Name -->
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Date of Birth -->
        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Gender -->
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Designation -->
        <div class="form-group">
            @Html.LabelFor(model => model.DesignationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DesignationID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DesignationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Contact Number -->
        <div class="form-group">
            @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Language -->
        <div class="form-group">
            @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Department Dropdown -->
        <div class="form-group">
            @Html.LabelFor(model => model.DeptId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DeptId, (SelectList)ViewBag.Departments, "Select Department", new { @class = "form-control", id = "deptDropdown" })
                @Html.ValidationMessageFor(model => model.DeptId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- SubDepartment Dropdown -->
        @*<div class="form-group">
            @Html.LabelFor(model => model.SubDeptId, "SubDepartment", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SubDeptId, new SelectList(Enumerable.Empty<SelectListItem>()), "Select SubDepartment", new { @class = "form-control", id = "subDeptDropdown" })
                @Html.ValidationMessageFor(model => model.SubDeptId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <!-- Submit Button -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="~/Scripts/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#deptDropdown').change(function () {
                var deptId = $(this).val();
                $.getJSON('@Url.Action("GetSubDepartments", "Employee")', { deptId: deptId }, function (data) {
                    var $subDeptDropdown = $('#subDeptDropdown');
                    $subDeptDropdown.empty();
                    $subDeptDropdown.append($('<option/>').text('Select Sub Department').val(''));
                    $.each(data, function (index, item) {
                        $subDeptDropdown.append($('<option/>').text(item.SubDeptName).val(item.SubDeptId));
                    });
                });
            });
        });
    </script>
}
